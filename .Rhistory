panel.grid.major = element_blank(),
panel.grid.minor = element_blank()
)
groups <- table(clean_df$DX)
control <- groups[1]/(groups[1]+groups[2]+groups[3])*100
mci <- groups[2]/(groups[1]+groups[2]+groups[3])*100
adhd <- 100 - (control+mci)
variables <- c("control", "mci", "adhd")
labels <- c("controls", "MSI patients", "ADHD patients")
for (i in seq_along(variables)) {
message <- sprintf("There were %.2f%% %s.", get(variables[i]), labels[i])
cat(message, "\n")
}
clean_df %>%
mutate (Anxiety = factor(Anxiety,
levels = c('0','1'),
labels = c('anxiety', 'no anxiety'))) %>%
mutate (DX = factor(DX,
levels = c('0','1','2'),
labels = c('control', 'MSI','ADHD'))) %>%
mutate (SEXO = factor(SEXO,
levels = c('0','1'),
labels = c('women', 'men'))) %>%
ggplot(aes(IDADE, `MEEM total`))+
labs(x = "Mental age", y = "Total MEEM")+
geom_point(aes(color=DX), alpha = 0.5)+
geom_smooth(method = 'lm')+
facet_grid(SEXO~Anxiety)
ggplot(clean_df, aes(x = factor(DX), y = Depression, fill = DX)) +
geom_boxplot(alpha=0.5) +
labs(x = "Clinical group", y = "Depression")+
geom_point(aes(color=DX), alpha = 0.5)+
geom_smooth()
summary_depression <- aggregate(Depression ~ DX, data = clean_df, function(x) c(mean = mean(x), sd = sd(x)))
summary_depression2 <- do.call(data.frame, summary_depression)
summary_depression2
ggplot(summary_depression2, aes(x = DX, y = Depression.mean, fill = DX)) +
geom_bar(stat = "identity", position = position_dodge(width = 0.8)) +
geom_errorbar(aes(ymin = Depression.mean - Depression.sd, ymax = Depression.mean + Depression.sd), width = 0.2, position = position_dodge(width = 0.8)) +
labs(title = "Depression Summary by Clinical Group", x = "Clinical group", y = "Mean Depression Score") +
theme_minimal() +
geom_point(aes(color=DX), alpha = 0.5)+
theme(
plot.title = element_text(hjust = 0.5),
legend.position = "none"
)
clean_df %>%
filter(cubos != '999') %>%                         #remove the outlier
ggplot(aes(x = factor(DX), y = cubos, fill = DX)) +
geom_boxplot(alpha=0.5) +
labs(x = "Clinical group", y = "Cubos")+
geom_point(aes(color=DX), alpha = 0.5)+
geom_smooth()
summary_anxiety <- aggregate(Anxiety ~ DX, data = clean_df, function(x) c(mean = mean(x), sd = sd(x)))
summary_anxiety2 <- do.call(data.frame, summary_anxiety)
summary_anxiety2
ggplot(summary_anxiety2, aes(x = DX, y = Anxiety.mean, fill = DX)) +
geom_bar(stat = "identity", position = position_dodge(width = 0.8)) +
geom_errorbar(aes(ymin = Anxiety.mean - Anxiety.sd, ymax = Anxiety.mean + Anxiety.sd), width = 0.2, position = position_dodge(width = 0.8)) +
labs(title = "Anxiety Summary by Clinical Group", x = "Clinical group", y = "Mean Anxiety Score") +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5),
legend.position = "none"
)
ggplot(clean_df, aes(x = factor(DX), y = a1a5, fill = DX)) +
geom_boxplot(alpha=0.5) +
labs(x = "Clinical group", y = "a1a5")+
geom_point(aes(color=DX), alpha = 0.5)+
geom_smooth()
data<-dplyr::select(clean_df, DX, Animais, FAS, TMTA, A7)
print(data)
data %>%
ggpairs(aes(color = as.factor(DX), alpha = 0.7),
upper = list(continuous = wrap("points", size = 2.5))) +
theme(
axis.ticks.x = element_blank(),
axis.text.x = element_blank(),
axis.ticks.y = element_blank(),
axis.text.y = element_blank()
)
hist.IDADE <- ggplot(data = clean_df, aes(IDADE)) +
geom_histogram()
hist.GAI <- ggplot(data = clean_df, aes(GAI)) +
geom_histogram()
hist.GDS <- ggplot(data = clean_df, aes(GDS)) +
geom_histogram()
hist.ESC <- ggplot(data = clean_df, aes(ESC)) +
geom_histogram()
labels = c('age', 'gai','gds','ESC')
plot_grid(hist.IDADE, hist.GAI, hist.GDS, hist.ESC, align = "hv")
clean_df
for (col_index in 3:32) {
table_result <- table(clean_df$DX, clean_df[col_index])
chisq_result <- chisq.test(table_result)
if (chisq_result$p.value < 0.05) {
cat("Kolumna:", colnames(clean_df)[col_index], "ma istotne różnice.\n")
}
}
clean_df[3]
clean_df[32]
for (col_index in 3:32) {
table_result <- table(clean_df$DX, clean_df[, col_index])
chisq_result <- chisq.test(table_result)
if (chisq_result$p.value < 0.05) {
cat("Kolumna:", colnames(clean_df)[col_index], "ma istotne różnice.\n")
}
}
for (col_index in 3:32) {
table_result <- table(clean_df[2], clean_df[, col_index])
chisq_result <- chisq.test(table_result)
if (chisq_result$p.value < 0.05) {
cat("Kolumna:", colnames(clean_df)[col_index], "ma istotne różnice.\n")
}
}
clean_df[2]
for (col_index in 3:32) {
table_result <- table(clean_df[2], clean_df[, col_index])
chisq_result <- chisq.test(table_result)
if (chisq_result$p.value < 0.05) {
cat("Kolumna:", colnames(clean_df)[col_index], "ma istotne różnice.\n")
}
}
install.packages('lapply')
summary(clean_df)
columns_to_analyze <- colnames(clean_df)[3:35]  # Zakładam, że pierwsze dwie kolumny to identyfikatory i grupy
# Lista na kolumny z istotnie różnymi wartościami między grupami
different_columns <- c()
# Iteracja przez wybrane kolumny
for (col in columns_to_analyze) {
# Tworzenie modelu ANOVA
anova_result <- aov(paste(col, "~ group"), data = clean_df)
# Analiza istotności różnic między grupami
p_value <- summary(anova_result)[[1]]$Pr[1]
# Jeśli p-value mniejsze niż 0.05, to różnice są istotne
if (p_value < 0.05) {
different_columns <- c(different_columns, col)
}
}
# Lista kolumn do analizy
columns_to_analyze <- colnames(clean_df)[3:35]  # Zakładam, że pierwsze dwie kolumny to identyfikatory i grupy
# Kolumna reprezentująca grupy (numer 2)
group_column <- clean_df[, 2]
# Lista na kolumny z istotnie różnymi wartościami między grupami
different_columns <- c()
# Iteracja przez wybrane kolumny
for (col in columns_to_analyze) {
# Tworzenie grup i porównywanie z kolumną grup
groups <- unique(group_column)
group_data <- lapply(groups, function(group) clean_df[which(group_column == group), col])
# Test statystyczny (np. ANOVA) lub test niemparametryczny (np. Kruskal-Wallis)
# Tutaj używam testu Kruskal-Wallis, który jest bardziej elastyczny niż ANOVA
p_value <- kruskal.test(group_data)$p.value
# Jeśli p-value mniejsze niż 0.05, to różnice są istotne
if (p_value < 0.05) {
different_columns <- c(different_columns, col)
}
}
model <-anova(.~clean_df$DX)
model <-anova(.~DX, data = clean_df)
clean_df
model <-anova(IDADE~DX, data = clean_df)
model <-aov(IDADE~DX, data = clean_df)
summary(model)
model <-aov(IDADE~DX, data = clean_df)
model <-aov(DX~., data = clean_df)
summary(model)
clean_df
model <-aov(DX~., data = clean_df)
summary(model)
model
require(readxl)
require(dplyr)
require(ggplot2)
require(viridis)
require(reshape2)
require(GGally)
require(cowplot)
clean_df <- read_excel(path = "data/ADHD_MC.xlsx")
clean_df[clean_df == 999] <- NA
clean_df <- clean_df %>%
mutate_all(~ifelse(is.na(.), mean(., na.rm = TRUE), .))
clean_df
#Missing values from the adhd_df
nrow(clean_df)
sum(is.na(clean_df))
last_cols <- clean_df[c('cubost','TMTAz','TMTBz')]
model <-aov(DX~., data = clean_df)
model
require(readxl)
require(dplyr)
require(ggplot2)
require(viridis)
require(reshape2)
require(GGally)
require(cowplot)
clean_df <- read_excel(path = "data/ADHD_MC.xlsx")
clean_df[clean_df == 999] <- NA
clean_df <- clean_df %>%
mutate_all(~ifelse(is.na(.), mean(., na.rm = TRUE), .))
clean_df
#Missing values from the adhd_df
nrow(clean_df)
sum(is.na(clean_df))
last_cols <- clean_df[c('cubost','TMTAz','TMTBz')]
colSums(is.na(last_cols))
str(clean_df)
pastel_colors <- c("#A6CEE3", "#B2DF8A")
labels <- c("Women", "Men")
ggplot(clean_df, aes(x = factor(SEXO), fill = factor(SEXO))) +
geom_bar() +
labs(title = "Ratio between men and women", x = "Sex", y = "Number") +
scale_x_discrete(labels = c("Women", "Men")) +
scale_fill_manual(values = pastel_colors, labels = labels) +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank()
)
sex <- table(clean_df$SEXO)
women <- sex[1] / (sex[1] + sex[2]) * 100
men <- 100 - women
message <- sprintf("There were %.2f%% females.", women)
cat(message, "\n")
pastel_colors <- c("#A6CEE3", "#B2DF8A", "#D8BFD8")
labels <- c("control", "MCI", "ADHD")
ggplot(clean_df, aes(x = factor(DX), fill = factor(DX))) +
geom_bar() +
labs(title = "Ratio between clinical groups", x = "Clinical group", y = "Number") +
scale_x_discrete(labels = c("control", "MCI", "ADHD")) +
scale_fill_manual(values = pastel_colors, labels = labels) +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank()
)
groups <- table(clean_df$DX)
control <- groups[1]/(groups[1]+groups[2]+groups[3])*100
mci <- groups[2]/(groups[1]+groups[2]+groups[3])*100
adhd <- 100 - (control+mci)
variables <- c("control", "mci", "adhd")
labels <- c("controls", "MSI patients", "ADHD patients")
for (i in seq_along(variables)) {
message <- sprintf("There were %.2f%% %s.", get(variables[i]), labels[i])
cat(message, "\n")
}
clean_df %>%
mutate (Anxiety = factor(Anxiety,
levels = c('0','1'),
labels = c('anxiety', 'no anxiety'))) %>%
mutate (DX = factor(DX,
levels = c('0','1','2'),
labels = c('control', 'MSI','ADHD'))) %>%
mutate (SEXO = factor(SEXO,
levels = c('0','1'),
labels = c('women', 'men'))) %>%
ggplot(aes(IDADE, `MEEM total`))+
labs(x = "Mental age", y = "Total MEEM")+
geom_point(aes(color=DX), alpha = 0.5)+
geom_smooth(method = 'lm')+
facet_grid(SEXO~Anxiety)
ggplot(clean_df, aes(x = factor(DX), y = Depression, fill = DX)) +
geom_boxplot(alpha=0.5) +
labs(x = "Clinical group", y = "Depression")+
geom_point(aes(color=DX), alpha = 0.5)+
geom_smooth()
summary_depression <- aggregate(Depression ~ DX, data = clean_df, function(x) c(mean = mean(x), sd = sd(x)))
summary_depression2 <- do.call(data.frame, summary_depression)
summary_depression2
ggplot(summary_depression2, aes(x = DX, y = Depression.mean, fill = DX)) +
geom_bar(stat = "identity", position = position_dodge(width = 0.8)) +
geom_errorbar(aes(ymin = Depression.mean - Depression.sd, ymax = Depression.mean + Depression.sd), width = 0.2, position = position_dodge(width = 0.8)) +
labs(title = "Depression Summary by Clinical Group", x = "Clinical group", y = "Mean Depression Score") +
theme_minimal() +
geom_point(aes(color=DX), alpha = 0.5)+
theme(
plot.title = element_text(hjust = 0.5),
legend.position = "none"
)
clean_df %>%
filter(cubos != '999') %>%                         #remove the outlier
ggplot(aes(x = factor(DX), y = cubos, fill = DX)) +
geom_boxplot(alpha=0.5) +
labs(x = "Clinical group", y = "Cubos")+
geom_point(aes(color=DX), alpha = 0.5)+
geom_smooth()
summary_anxiety <- aggregate(Anxiety ~ DX, data = clean_df, function(x) c(mean = mean(x), sd = sd(x)))
summary_anxiety2 <- do.call(data.frame, summary_anxiety)
summary_anxiety2
ggplot(summary_anxiety2, aes(x = DX, y = Anxiety.mean, fill = DX)) +
geom_bar(stat = "identity", position = position_dodge(width = 0.8)) +
geom_errorbar(aes(ymin = Anxiety.mean - Anxiety.sd, ymax = Anxiety.mean + Anxiety.sd), width = 0.2, position = position_dodge(width = 0.8)) +
labs(title = "Anxiety Summary by Clinical Group", x = "Clinical group", y = "Mean Anxiety Score") +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5),
legend.position = "none"
)
ggplot(clean_df, aes(x = factor(DX), y = a1a5, fill = DX)) +
geom_boxplot(alpha=0.5) +
labs(x = "Clinical group", y = "a1a5")+
geom_point(aes(color=DX), alpha = 0.5)+
geom_smooth()
data<-dplyr::select(clean_df, DX, Animais, FAS, TMTA, A7)
print(data)
data %>%
ggpairs(aes(color = as.factor(DX), alpha = 0.7),
upper = list(continuous = wrap("points", size = 2.5))) +
theme(
axis.ticks.x = element_blank(),
axis.text.x = element_blank(),
axis.ticks.y = element_blank(),
axis.text.y = element_blank()
)
hist.IDADE <- ggplot(data = clean_df, aes(IDADE)) +
geom_histogram()
hist.GAI <- ggplot(data = clean_df, aes(GAI)) +
geom_histogram()
hist.GDS <- ggplot(data = clean_df, aes(GDS)) +
geom_histogram()
hist.ESC <- ggplot(data = clean_df, aes(ESC)) +
geom_histogram()
labels = c('age', 'gai','gds','ESC')
plot_grid(hist.IDADE, hist.GAI, hist.GDS, hist.ESC, align = "hv")
clean_df[2]
clean_df
model <-aov(DX~., data = clean_df)
model
model <-aov(DX~., data = clean_df)
model
for column in [3:32] {
model <-aov(DX~., data = clean_df)
model
for (column in 3:32) {
model <- aov(DX~clean_df[column])
print(summary(model))
}
model <-aov(DX~., data = clean_df)
model
for (column in 3:32) {
model <- aov(data = clean_df, DX~clean_df[column])
print(summary(model))
}
model <-aov(DX~., data = clean_df)
model
for (column in 3:32) {
model <- aov(clean_df$DX~clean_df[column])
print(summary(model))
}
model <-aov(DX~., data = clean_df)
model
for (column in 3:32) {
model <- aov(DX~clean_df[column], data = clean_df)
print(summary(model))
}
model <-aov(DX~., data = clean_df)
model
for (column in 3:32) {
model <- aov(DX ~ factor(clean_df[[column]]), data = clean_df)
print(summary(model))
}
for (column in 3:32) {
model <- aov(DX ~ factor(clean_df[[column]]), data = clean_df)
print(summary(model))
}
for (column in 3:32) {
model <- aov(DX ~ factor(clean_df[[column]]), data = clean_df)
print(summary(model))
if (summary_result[[1]]$`Pr(>F)`[1] < 0.05) {
cat("Kolumna:", colnames(clean_df)[column], "ma istotną różnicę.\n")
}
}
for (column in 3:32) {
model <- aov(DX ~ factor(clean_df[[column]]), data = clean_df)
summary_result <- summary(model)
if (summary_result[[1]]$`Pr(>F)`[1] < 0.05) {
cat("Kolumna:", colnames(clean_df)[column], "ma istotną różnicę.\n")
}
}
for (column in 3:32) {
model <- aov(DX ~ factor(clean_df[[column]]), data = clean_df)
summary_result <- summary(model)
if (summary_result[[1]]$`Pr(>F)`[1] < 0.05) {
cat("Kolumna:", colnames(clean_df)[column], "has a significant difference.\n")
}
}
significant_columns <- c()
for (column in 3:32) {
model <- aov(DX ~ factor(clean_df[[column]]), data = clean_df)
summary_result <- summary(model)
if (summary_result[[1]]$`Pr(>F)`[1] < 0.05) {
cat("Column:", colnames(clean_df)[column], "has a significant difference.\n")
significant_columns <- c(significant_columns, colnames(clean_df)[column])
}
}
for (column in significant_columns) {
ggplot(clean_df, aes(x = factor(clean_df[[column]]), fill = factor(DX))) +
geom_bar(position = "dodge") +
labs(title = paste("Wykres słupkowy dla kolumny:", column)) +
theme_minimal()
}
print(significant_columns)
}
for (column in significant_columns) {
ggplot(clean_df, aes(x = factor(clean_df[[column]]), fill = factor(DX))) +
geom_bar(position = "dodge") +
labs(title = paste("Wykres słupkowy dla kolumny:", column)) +
theme_minimal()
}
for (column in significant_columns) {
plot <- ggplot(clean_df, aes(x = factor(clean_df[[column]]), fill = factor(DX))) +
geom_bar(position = "dodge") +
labs(title = paste("Wykres słupkowy dla kolumny:", column)) +
theme_minimal()
print(plot)
}
# Tworzenie ramki danych z danymi do wykresu
mean_data <- clean_df %>%
group_by(DX) %>%
summarise(across(all_of(significant_columns), mean))
# Przygotowanie danych do wykresu w formacie "dłuższym"
mean_data_long <- pivot_longer(mean_data, cols = -DX, names_to = "Kolumna", values_to = "Średnia")
install.packages("tidyr")
require(readxl)
require(dplyr)
require(ggplot2)
require(viridis)
require(reshape2)
require(GGally)
require(cowplot)
require(tidyr)
# Tworzenie ramki danych z danymi do wykresu
mean_data <- clean_df %>%
group_by(DX) %>%
summarise(across(all_of(significant_columns), mean))
# Przygotowanie danych do wykresu w formacie "dłuższym"
mean_data_long <- pivot_longer(mean_data, cols = -DX, names_to = "Kolumna", values_to = "Średnia")
# Tworzenie wykresu kolumnowego
ggplot(mean_data_long, aes(x = Kolumna, y = Średnia, fill = factor(DX))) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "Średnie dla istotnych kolumn względem DX", y = "Średnia", fill = "DX") +
theme_minimal()
# Tworzenie wykresu kolumnowego z błędami
ggplot(mean_data_long, aes(x = Kolumna, y = Średnia, fill = factor(DX))) +
geom_bar(stat = "identity", position = "dodge") +
geom_errorbar(data = std_errors_long, aes(ymin = Średnia - Błąd, ymax = Średnia + Błąd), position = "dodge") +
labs(title = "Średnie i błędy dla istotnych kolumn względem DX", y = "Średnia", fill = "DX") +
theme_minimal()
# Tworzenie ramki danych z danymi do wykresu
mean_data <- clean_df %>%
group_by(DX) %>%
summarise(across(all_of(significant_columns), mean))
# Przygotowanie danych do wykresu w formacie "dłuższym"
mean_data_long <- pivot_longer(mean_data, cols = -DX, names_to = "Kolumna", values_to = "Średnia")
# Obliczenie błędów standardowych dla każdej grupy i kolumny
std_errors <- clean_df %>%
group_by(DX) %>%
summarise(across(all_of(significant_columns), ~ sd(.) / sqrt(length(.))))
# Przygotowanie danych błędów do wykresu w formacie "dłuższym"
std_errors_long <- pivot_longer(std_errors, cols = -DX, names_to = "Kolumna", values_to = "Błąd")
# Tworzenie wykresu kolumnowego z błędami
ggplot(mean_data_long, aes(x = Kolumna, y = Średnia, fill = factor(DX))) +
geom_bar(stat = "identity", position = "dodge") +
geom_errorbar(data = std_errors_long, aes(ymin = Średnia - Błąd, ymax = Średnia + Błąd), position = "dodge") +
labs(title = "Średnie i błędy dla istotnych kolumn względem DX", y = "Średnia", fill = "DX") +
theme_minimal()
# Tworzenie ramki danych z danymi do wykresu
mean_data <- clean_df %>%
group_by(DX) %>%
summarise(across(all_of(significant_columns), mean))
# Przygotowanie danych do wykresu w formacie "dłuższym"
mean_data_long <- pivot_longer(mean_data, cols = -DX, names_to = "Kolumna", values_to = "Średnia")
# Tworzenie wykresu kolumnowego
ggplot(mean_data_long, aes(x = Kolumna, y = Średnia, fill = factor(DX))) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "Średnie dla istotnych kolumn względem DX", y = "Średnia", fill = "DX") +
theme_minimal()
# Tworzenie ramki danych z danymi do wykresu
mean_data <- clean_df %>%
group_by(DX) %>%
summarise(across(all_of(significant_columns), mean))
# Przygotowanie danych do wykresu w formacie "dłuższym"
mean_data_long <- pivot_longer(mean_data, cols = -DX, names_to = "Column", values_to = "Mean")
# Tworzenie wykresu kolumnowego
ggplot(mean_data_long, aes(x = Kolumna, y = Średnia, fill = factor(DX))) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "Means for Significant Columns with respect to DX", y = "Mean", fill = "DX") +
theme_minimal()
# Tworzenie ramki danych z danymi do wykresu
mean_data <- clean_df %>%
group_by(DX) %>%
summarise(across(all_of(significant_columns), mean))
# Przygotowanie danych do wykresu w formacie "dłuższym"
mean_data_long <- pivot_longer(mean_data, cols = -DX, names_to = "Kolumna", values_to = "Średnia")
# Tworzenie wykresu kolumnowego
ggplot(mean_data_long, aes(x = Kolumna, y = Średnia, fill = factor(DX))) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "Means for Significant Columns with respect to DX", y = "Mean", fill = "DX") +
theme_minimal()
# Tworzenie ramki danych z danymi do wykresu
mean_data <- clean_df %>%
group_by(DX) %>%
summarise(across(all_of(significant_columns), mean))
# Przygotowanie danych do wykresu w formacie "dłuższym"
mean_data_long <- pivot_longer(mean_data, cols = -DX, names_to = "Column", values_to = "Mean")
# Tworzenie wykresu kolumnowego
ggplot(mean_data_long, aes(x = Column, y = Mean, fill = factor(DX))) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "Means for Significant Columns with respect to DX", y = "Mean", fill = "DX") +
theme_minimal()
