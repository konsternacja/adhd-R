panel.grid.major = element_blank(),
panel.grid.minor = element_blank()
)
pastel_colors <- c("#A6CEE3", "#B2DF8A", "#D8BFD8")
labels <- c("control", "MCI", "ADHD")
ggplot(clean_df, aes(x = factor(DX), fill = factor(DX))) +
geom_bar() +
labs(title = "Ratio between clinical groups", x = "Clinical group", y = "Number") +
scale_x_discrete(labels = c("control", "MCI", "ADHD")) +
scale_fill_manual(values = pastel_colors, labels = labels) +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank()
)
cat(message, "\n")
clean_df %>%
mutate (Anxiety = factor(Anxiety,
levels = c('0','1'),
labels = c('anxiety', 'no anxiety'))) %>%
mutate (DX = factor(DX,
levels = c('0','1','2'),
labels = c('control', 'MSI','ADHD'))) %>%
mutate (SEXO = factor(SEXO,
levels = c('0','1'),
labels = c('women', 'men'))) %>%
ggplot(aes(IDADE, `MEEM total`))+
labs(x = "Mental age", y = "Total MEEM")+
geom_point(aes(color=DX), alpha = 0.5)+
geom_smooth(method = 'lm')+
facet_grid(SEXO~Anxiety)
ggplot(clean_df, aes(x = factor(DX), y = Depression, fill = DX)) +
geom_boxplot(alpha=0.5) +
labs(x = "Clinical group", y = "Depression")+
geom_point(aes(color=DX), alpha = 0.5)+
geom_smooth()
summary_depression <- aggregate(Depression ~ DX, data = clean_df, function(x) c(mean = mean(x), sd = sd(x)))
summary_depression2 <- do.call(data.frame, summary_depression)
summary_depression2
ggplot(summary_depression2, aes(x = DX, y = mean, fill = DX)) +
geom_bar(stat = "identity", position = position_dodge(width = 0.8)) +
geom_errorbar(aes(ymin = mean - sd, ymax = mean + sd), width = 0.2, position = position_dodge(width = 0.8)) +
labs(title = "Depression Summary by Clinical Group", x = "Clinical group", y = "Mean Depression Score") +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5),
legend.position = "none"  # Wyłącz legendę, jeśli nie jest potrzebna
)
ggplot(summary_depression2, aes(x = DX, y = Depression.mean, fill = DX)) +
geom_bar(stat = "identity", position = position_dodge(width = 0.8)) +
geom_errorbar(aes(ymin = mean - sd, ymax = mean + sd), width = 0.2, position = position_dodge(width = 0.8)) +
labs(title = "Depression Summary by Clinical Group", x = "Clinical group", y = "Mean Depression Score") +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5),
legend.position = "none"  # Wyłącz legendę, jeśli nie jest potrzebna
)
ggplot(summary_depression2, aes(x = DX, y = Depression.mean, fill = DX)) +
geom_bar(stat = "identity", position = position_dodge(width = 0.8)) +
geom_errorbar(aes(ymin = Depression.mean - Depression.sd, ymax = Depression.mean + Depression.sd), width = 0.2, position = position_dodge(width = 0.8)) +
labs(title = "Depression Summary by Clinical Group", x = "Clinical group", y = "Mean Depression Score") +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5),
legend.position = "none"  # Wyłącz legendę, jeśli nie jest potrzebna
)
ggplot(summary_depression2, aes(x = DX, y = Depression.mean, fill = DX)) +
geom_bar(stat = "identity", position = position_dodge(width = 0.8)) +
geom_errorbar(aes(ymin = Depression.mean - Depression.sd, ymax = Depression.mean + Depression.sd), width = 0.2, position = position_dodge(width = 0.8)) +
labs(title = "Depression Summary by Clinical Group", x = "Clinical group", y = "Mean Depression Score") +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5),
legend.position = "none"
)
clean_df %>%
filter(cubos != '999') %>%                         #remove the outlier
ggplot(aes(x = factor(DX), y = cubos, fill = DX)) +
geom_boxplot(alpha=0.5) +
labs(x = "Clinical group", y = "Cubos")+
geom_point(aes(color=DX), alpha = 0.5)+
geom_smooth()
summary_anxiety <- aggregate(Anxiety ~ DX, data = clean_df, function(x) c(mean = mean(x), sd = sd(x)))
summary_anxiety2 <- do.call(data.frame, summary_anxiety)
summary_anxiety2
ggplot(summary_depression2, aes(x = DX, y = Anxiety.mean, fill = DX)) +
geom_bar(stat = "identity", position = position_dodge(width = 0.8)) +
geom_errorbar(aes(ymin = Anxiety.mean - Anxiety.sd, ymax = Anxiety.mean + Anxiety.sd), width = 0.2, position = position_dodge(width = 0.8)) +
labs(title = "Anxiety Summary by Clinical Group", x = "Clinical group", y = "Mean Anxiety Score") +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5),
legend.position = "none"
)
ggplot(summary_anxiety2, aes(x = DX, y = Anxiety.mean, fill = DX)) +
geom_bar(stat = "identity", position = position_dodge(width = 0.8)) +
geom_errorbar(aes(ymin = Anxiety.mean - Anxiety.sd, ymax = Anxiety.mean + Anxiety.sd), width = 0.2, position = position_dodge(width = 0.8)) +
labs(title = "Anxiety Summary by Clinical Group", x = "Clinical group", y = "Mean Anxiety Score") +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5),
legend.position = "none"
)
ggplot(clean_df, aes(x = factor(DX), y = a1a5, fill = DX)) +
geom_boxplot(alpha=0.5) +
labs(x = "Clinical group", y = "a1a5")+
geom_point(aes(color=DX), alpha = 0.5)+
geom_smooth()
install.packages(reshape2)
install.packages('reshape2')
# Filtracja danych - usuń wiersze z wartością 999
clean_df <- clean_df[!apply(clean_df == 999, 1, any), ]
# Przekształcenie DataFrame na długi format (long format) za pomocą funkcji melt() z pakietu reshape2
library(reshape2)
melted_df <- melt(clean_df, id.vars = NULL, variable.name = "Variable")
require(readxl)
require(knitr)
require(dplyr)
require(ggplot2)
require(viridis)
require(reshape2)
ggplot(summary_depression2, aes(x = DX, y = Depression.mean, fill = DX)) +
geom_bar(stat = "identity", position = position_dodge(width = 0.8)) +
geom_errorbar(aes(ymin = Depression.mean - Depression.sd, ymax = Depression.mean + Depression.sd), width = 0.2, position = position_dodge(width = 0.8)) +
labs(title = "Depression Summary by Clinical Group", x = "Clinical group", y = "Mean Depression Score") +
theme_minimal() +
geom_point(aes(color=DX), alpha = 0.5)+
geom_smooth()
theme(
plot.title = element_text(hjust = 0.5),
legend.position = "none"
)
ggplot(summary_depression2, aes(x = DX, y = Depression.mean, fill = DX)) +
geom_bar(stat = "identity", position = position_dodge(width = 0.8)) +
geom_errorbar(aes(ymin = Depression.mean - Depression.sd, ymax = Depression.mean + Depression.sd), width = 0.2, position = position_dodge(width = 0.8)) +
labs(title = "Depression Summary by Clinical Group", x = "Clinical group", y = "Mean Depression Score") +
theme_minimal() +
geom_point(aes(color=DX), alpha = 0.5)+
theme(
plot.title = element_text(hjust = 0.5),
legend.position = "none"
)
clean_df <- clean_df[!apply(clean_df == 999, 1, any), ]
melted_df <- melt(clean_df, id.vars = NULL, variable.name = "Variable")
ggplot(melted_df, aes(x = Variable, y = value, fill = Variable)) +
geom_bar(stat = "identity", position = position_dodge(width = 0.8)) +
labs(title = "Porównanie danych z różnych kolumn", x = "Kolumna", y = "Wartość") +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5),
axis.text.x = element_text(angle = 45, hjust = 1)
) +
facet_wrap(~Variable, scales = "free", ncol = 2)
ggplot(melted_df, aes(x = Variable, y = value, fill = Variable)) +
geom_bar(stat = "identity", position = position_dodge(width = 0.8)) +
labs(title = "Porównanie danych z różnych kolumn", x = "Kolumna", y = "Wartość") +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5),
axis.text.x = element_text(angle = 45, hjust = 1)
) +
facet_wrap(~Variable, scales = "free", ncol = 2)
clean_df <- clean_df[!apply(clean_df == 999, 1, any), ]
melted_df <- melt(clean_df, id.vars = NULL, variable.name = "Variable")
melted_df
clean_df <- clean_df[!apply(clean_df == 999, 1, any), ]
melted_df <- melt(clean_df, id.vars = NULL, variable.name = "Variable")
clean_df
clean_df <- clean_df[!apply(clean_df == 999, 1, any), ]
melted_df <- melt(clean_df, id.vars = NULL, variable.name = "Variable")
clean_df %>%
ggpairs(aes(color = SEXO, alpha = 0.7),
upper = list(continuous = wrap("cor", size = 2.5))
) +
theme(
axis.ticks.x = element_blank(),
axis.text.x = element_blank(),
axis.ticks.y = element_blank(),
axis.text.y = element_blank()
)
install.packages("GGally")
require(readxl)
require(knitr)
require(dplyr)
require(ggplot2)
require(viridis)
require(reshape2)
require(GGally)
clean_df %>%
ggpairs(aes(color = SEXO, alpha = 0.7),
upper = list(continuous = wrap("cor", size = 2.5))
) +
theme(
axis.ticks.x = element_blank(),
axis.text.x = element_blank(),
axis.ticks.y = element_blank(),
axis.text.y = element_blank()
)
data<-dplyr::select(clean_df, FAS, Animais, TMTB, REC)
pairs(data)
data<-dplyr::select(clean_df, FAS, Animais, TMTB, REC)
data %>%
ggpairs(aes(color = SEX0, alpha = 0.7),
upper = list(continuous = wrap("cor", size = 2.5))
) +
theme(
axis.ticks.x = element_blank(),
axis.text.x = element_blank(),
axis.ticks.y = element_blank(),
axis.text.y = element_blank()
)
data<-dplyr::select(clean_df, FAS, Animais, TMTB, REC)
data %>%
ggpairs(aes(color = SEXO, alpha = 0.7),
upper = list(continuous = wrap("cor", size = 2.5))
) +
theme(
axis.ticks.x = element_blank(),
axis.text.x = element_blank(),
axis.ticks.y = element_blank(),
axis.text.y = element_blank()
)
data<-dplyr::select(clean_df, DX, FAS, Animais, TMTB, REC)
data %>%
ggpairs(aes(color = DX, alpha = 0.7),
upper = list(continuous = wrap("cor", size = 2.5))
) +
theme(
axis.ticks.x = element_blank(),
axis.text.x = element_blank(),
axis.ticks.y = element_blank(),
axis.text.y = element_blank()
)
data<-dplyr::select(clean_df, DX, FAS, Animais, TMTB, REC)
DX$clean_df <- as.factor(clean_df)
data<-dplyr::select(clean_df, DX, FAS, Animais, TMTB, REC)
data %>%
ggpairs(aes(color = DX$clean_df, alpha = 0.7),
upper = list(continuous = wrap("cor", size = 2.5))
) +
theme(
axis.ticks.x = element_blank(),
axis.text.x = element_blank(),
axis.ticks.y = element_blank(),
axis.text.y = element_blank()
)
data<-dplyr::select(clean_df, DX, FAS, Animais, TMTB, REC)
DX$clean_df <- as.factor(DX$clean_df)
data<-dplyr::select(clean_df, DX, FAS, Animais, TMTB, REC)
DX$cdata <- as.factor(DX$data)
data<-dplyr::select(clean_df, DX, FAS, Animais, TMTB, REC)
DX$data <- as.factor(DX$data)
clean_df <- clean_df[!apply(clean_df == 999, 1, any), ]
# Wykres punktowy dla różnych kolumn w zestawieniu
ggpairs(clean_df,
columns = c("DX", "FAS", "Animais", "TMTB", "REC"),
aes(color = as.factor(DX), alpha = 0.7)) +
theme(
axis.ticks.x = element_blank(),
axis.text.x = element_blank(),
axis.ticks.y = element_blank(),
axis.text.y = element_blank()
)
ggpairs(data, title = "Porównanie kolumn", lower = list(continuous = wrap("points", alpha = 0.7)))
ggpairs(data,
title = "Porównanie kolumn",
lower = list(continuous = wrap("points", alpha = 0.7)),
color = DX)
ggpairs(data,
title = "Porównanie kolumn",
lower = list(continuous = wrap("points", alpha = 0.7)),
color = DX$data)
data<-dplyr::select(clean_df, DX, Animais, FAS, cubost, A7)
ggpairs(data,
title = "Porównanie kolumn",
lower = list(continuous = wrap("points", alpha = 0.7)),
color = DX$data)
ggpairs(data,
title = "Porównanie kolumn",
lower = list(continuous = wrap("points", alpha = 0.7)),
colour = DX$data)
data<-dplyr::select(clean_df, DX, Animais, FAS, cubost, A7)
ggpairs(data,
title = "Porównanie kolumn",
lower = list(continuous = wrap("points", alpha = 0.7)),
colour = DX)
clean_df <- clean_df[!apply(clean_df == 999, 1, any), ]
# Wykres punktowy dla różnych kolumn w zestawieniu
ggpairs(clean_df,
columns = c("DX", "FAS", "Animais", "TMTB", "REC"),
aes(color = as.factor(DX), alpha = 0.7)) +
theme(
axis.ticks.x = element_blank(),
axis.text.x = element_blank(),
axis.ticks.y = element_blank(),
axis.text.y = element_blank()
)
data<-dplyr::select(clean_df, DX, Animais, FAS, cubost, A7)
data <- data[!apply(data == 999, 1, any), ]
ggpairs(data,
columns = c("Animais", "FAS", "cubost", "A7"),
title = "Porównanie kolumn",
lower = list(continuous = wrap("points", alpha = 0.7)),
colour = 'DX')
data<-dplyr::select(clean_df, DX, Animais, FAS, cubost, A7)
data <- data[!apply(data == 999, 1, any), ]
ggpairs(data,
columns = c("Animais", "FAS", "cubost", "A7"),
title = "Porównanie kolumn",
lower = list(continuous = wrap("points", alpha = 0.7),
colour = 'DX'))
print(data)
data<-dplyr::select(clean_df, DX, Animais, FAS, cubost, A7)
data <- data[!apply(data == 999, 1, any), ]
ggpairs(data,
columns = c("Animais", "FAS", "cubost", "A7"),
title = "Porównanie kolumn",
lower = list(continuous = wrap("points", alpha = 0.7),
color = 'DX'))
data<-dplyr::select(clean_df, DX, Animais, FAS, cubost, A7)
data <- data[!apply(data == 999, 1, any), ]
data %>%
ggpairs(aes(color = DX, alpha = 0.7),
upper = list(continuous = wrap("cor", size = 2.5))
) +
theme(
axis.ticks.x = element_blank(),
axis.text.x = element_blank(),
axis.ticks.y = element_blank(),
axis.text.y = element_blank()
)
data<-dplyr::select(clean_df, DX, Animais, FAS, cubost, A7)
data <- data[!apply(data == 999, 1, any), ]
data %>%
ggpairs(aes(color = as.factor(DX), alpha = 0.7),
upper = list(continuous = wrap("cor", size = 2.5))
) +
theme(
axis.ticks.x = element_blank(),
axis.text.x = element_blank(),
axis.ticks.y = element_blank(),
axis.text.y = element_blank()
)
data<-dplyr::select(clean_df, DX, Animais, FAS, cubost, A7)
data <- data[!apply(data == 999, 1, any), ]
data %>%
ggpairs(aes(color = as.factor(DX), alpha = 0.7),
upper = list(continuous = wrap("points", size = 2.5))
) +
theme(
axis.ticks.x = element_blank(),
axis.text.x = element_blank(),
axis.ticks.y = element_blank(),
axis.text.y = element_blank()
)
data<-dplyr::select(clean_df, DX, Animais, FAS, cubost, A7)
data <- data[!apply(data == 999, 1, any), ]
data %>%
ggpairs(aes(color = as.factor(DX), alpha = 0.7),
upper = list(continuous = wrap("points", size = 2.5))
) +
theme(
axis.ticks.x = element_blank(),
axis.text.x = element_blank(),
axis.ticks.y = element_blank(),
axis.text.y = element_blank()
)
ggplot(melted_df, aes(x = Variable, y = value, fill = Variable)) +
geom_bar(stat = "identity", position = position_dodge(width = 0.8)) +
labs(title = "Porównanie danych z różnych kolumn", x = "Kolumna", y = "Wartość") +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5),
axis.text.x = element_text(angle = 45, hjust = 1)
) +
facet_wrap(~Variable, scales = "free", ncol = 2)
data<-dplyr::select(clean_df, DX, Animais, FAS, TMTA, A7)
data <- data[!apply(data == 999, 1, any), ]
data %>%
ggpairs(aes(color = as.factor(DX), alpha = 0.7),
upper = list(continuous = wrap("points", size = 2.5))
) +
theme(
axis.ticks.x = element_blank(),
axis.text.x = element_blank(),
axis.ticks.y = element_blank(),
axis.text.y = element_blank()
)
require(readxl)
require(knitr)
require(dplyr)
require(ggplot2)
require(viridis)
require(reshape2)
require(GGally)
adhd_df <- read_excel(path = "data/ADHD_MC.xlsx")
adhd_df
kable(adhd_df)
#Missing values from the adhd_df
nrow(adhd_df)
sum(is.na(adhd_df))
last_cols <- adhd_df[c('cubost','TMTAz','TMTBz')]
colSums(is.na(last_cols))
str(adhd_df)
clean_df <- adhd_df %>% select(-33)
clean_df
kable(clean_df)
pastel_colors <- c("#A6CEE3", "#B2DF8A")
labels <- c("Women", "Men")
ggplot(clean_df, aes(x = factor(SEXO), fill = factor(SEXO))) +
geom_bar() +
labs(title = "Ratio between men and women", x = "Sex", y = "Number") +
scale_x_discrete(labels = c("Women", "Men")) +
scale_fill_manual(values = pastel_colors, labels = labels) +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank()
)
sex <- table(clean_df$SEXO)
women <- sex[1] / (sex[1] + sex[2]) * 100
men <- 100 - women
message <- sprintf("There were %.2f%% females.", women)
cat(message, "\n")
pastel_colors <- c("#A6CEE3", "#B2DF8A", "#D8BFD8")
labels <- c("control", "MCI", "ADHD")
ggplot(clean_df, aes(x = factor(DX), fill = factor(DX))) +
geom_bar() +
labs(title = "Ratio between clinical groups", x = "Clinical group", y = "Number") +
scale_x_discrete(labels = c("control", "MCI", "ADHD")) +
scale_fill_manual(values = pastel_colors, labels = labels) +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank()
)
require(readxl)
require(knitr)
require(dplyr)
require(ggplot2)
require(viridis)
require(reshape2)
require(GGally)
adhd_df <- read_excel(path = "data/ADHD_MC.xlsx")
adhd_df
kable(adhd_df)
#Missing values from the adhd_df
nrow(adhd_df)
sum(is.na(adhd_df))
last_cols <- adhd_df[c('cubost','TMTAz','TMTBz')]
colSums(is.na(last_cols))
str(adhd_df)
clean_df <- adhd_df %>% select(-33)
clean_df
kable(clean_df)
pastel_colors <- c("#A6CEE3", "#B2DF8A")
labels <- c("Women", "Men")
ggplot(clean_df, aes(x = factor(SEXO), fill = factor(SEXO))) +
geom_bar() +
labs(title = "Ratio between men and women", x = "Sex", y = "Number") +
scale_x_discrete(labels = c("Women", "Men")) +
scale_fill_manual(values = pastel_colors, labels = labels) +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank()
)
sex <- table(clean_df$SEXO)
women <- sex[1] / (sex[1] + sex[2]) * 100
men <- 100 - women
message <- sprintf("There were %.2f%% females.", women)
cat(message, "\n")
pastel_colors <- c("#A6CEE3", "#B2DF8A", "#D8BFD8")
labels <- c("control", "MCI", "ADHD")
ggplot(clean_df, aes(x = factor(DX), fill = factor(DX))) +
geom_bar() +
labs(title = "Ratio between clinical groups", x = "Clinical group", y = "Number") +
scale_x_discrete(labels = c("control", "MCI", "ADHD")) +
scale_fill_manual(values = pastel_colors, labels = labels) +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank()
)
data<-dplyr::select(clean_df, DX, Animais, FAS, TMTA, A7)
data <- data[!apply(data == 999, 1, any), ]
print(data)
data %>%
ggpairs(aes(color = as.factor(DX), alpha = 0.7),
upper = list(continuous = wrap("points", size = 2.5))
) +
theme(
axis.ticks.x = element_blank(),
axis.text.x = element_blank(),
axis.ticks.y = element_blank(),
axis.text.y = element_blank()
)
data %>%
ggpairs(aes(color = as.factor(DX), alpha = 0.7),
upper = list(continuous = wrap("points", size = 2.5))
) +
theme(
axis.ticks.x = element_blank(),
axis.text.x = element_blank(),
axis.ticks.y = element_blank(),
axis.text.y = element_blank()
)
